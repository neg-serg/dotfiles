#!/usr/bin/env bash
# swd: download a random wallpaper from wallhaven.cc with filters
# Usage:
#   swd [options]
# Options:
#   -C, --colors HEX[,HEX...]   dominant colors (e.g. 424153)
#   -a, --atleast WxH           minimum resolution (default: 3840x2160)
#   -p, --purity STR            purity flags (SFW=100, Sketchy=010, Both=110)
#   -c, --categories STR        categories (General=100, Anime=010, People=001)
#   -r, --ratios LIST           aspect ratios (e.g. 16x9,21x9)
#   -s, --sorting MODE          latest|views|toplist|favorites|random
#   -o, --order ORDER           asc|desc (default: desc)
#   -l, --location DIR          download directory (default: ~/pic/wl)
#   -h, --help                  show this help

set -Eeuo pipefail
IFS=$'\n\t'

if [[ "$1" == "-h" || "$1" == "--help" || "$1" == "help" ]]; then
  sed -n '2,14p' "$0" | sed 's/^# \{0,1\}//'; exit 0
fi
die(){ printf 'swd: %s\n' "$*" >&2; exit 1; }
need(){ command -v "$1" >/dev/null 2>&1 || die "missing dependency: $1"; }
need curl
need jq
# TODO: create swd for unsplash
location="/home/neg/pic/wl"
atleast="3840x2160"
purity="0" # Set the purity filter setting, SFW = 100, Sketchy = 010, Both = 110, NOTE: Can combine them
categories="100" # Set the category, General = 100, Anime = 010, People = 001, NOTE: Can combine them
order="desc" # Set the order

# Set the aspect ratio of the image
# All = Do not include for all, Square = 1x1 3x2 4x3 5x4, Portrait = 9x16 10x16 9x18
# Wide = 16x9 16x10, Ultrawide = 21x9 32x9 48x9, NOTE: Can combine them by seperating with ,
ratios="16x9"

# Set the dominant colors of the image
# All           = Do not include for all
# #660000 #990000 #cc0000 #cc3333 #ea4c88 #993399
# #663399 #333399 #0066cc #0099cc #66cccc #77cc33
# #669900 #336600 #666600 #999900 #cccc33 #cccc33
# #cccc33 #ff9900 #ff6600 #cc6633 #996633 #663300
# #000000 #999999 #cccccc #ffffff #424153
# colors="424153"
# Set the site address
site="wallhaven.cc"

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
      -C | --colors) colors="$2" shift shift ;;
      -a | --atleast) atleast="$2" shift shift ;;
      -p | --purity) purity="$2" shift shift ;;
      -c | --categories) categories="$2" shift shift ;;
      -r | --ratios) ratios="$2" shift shift ;;
      -s | --sorting) sorting="$2" shift shift ;;
      -o | --order) order="$2" shift shift ;;
      -l | --location) location="$2" shift shift ;;
    *) shift ;;
    esac
done

# Build API URL instead of scraping HTML
api_url="https://$site/api/v1/search?"
[[ -n "$categories" ]] && api_url+="categories=$categories"
[[ -n "$purity" ]] && api_url+="&purity=$purity"
[[ -n "$order" ]] && api_url+="&order=$order"
[[ -n "$colors" ]] && api_url+="&colors=$colors"
[[ -n "$ratios" ]] && api_url+="&ratios=$ratios"
[[ -n "$atleast" ]] && api_url+="&atleast=$atleast"
api_url+="&page=$(("$RANDOM" % 30 + 1))"

case "$sorting" in
  "latest") api_url+="&sorting=date_added" ;;
  "views") api_url+="&sorting=views" ;;
  "toplist") api_url+="&sorting=toplist" ;;
  "favorites") api_url+="&sorting=favorites" ;;
  *) api_url+="&sorting=random" ;;
esac

# Read JSON and pick random wallpaper path (.data[].path)
json="$(curl -fsS --retry 3 --retry-delay 1 "$api_url")" || die "failed to query API"
mapfile -t img_paths < <(jq -r '.data[]?.path' <<< "$json")
if [[ ${#img_paths[@]} -eq 0 ]]; then
  die "no wallpapers found for the given filters"
fi
rand_img="${img_paths[$RANDOM % ${#img_paths[@]}]}"
mkdir -p -- "$location"
wallpaper="$location/${rand_img##*/}"
curl -fsS --retry 3 --retry-delay 1 -o "$wallpaper" "$rand_img" >/dev/null || die "failed to download image"
printf '%s\n' "$wallpaper"
