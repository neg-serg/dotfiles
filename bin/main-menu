#!/usr/bin/env sh

main_menu='
title_copy
artist_copy
album_copy
path_copy
pipewire_output
alsa_output
game_start
game_end
bt_headphones
translate
termbin
minevpn
'

# 󰊿translate
# 󱃖termbin
# minevpn

generate_menu() {
    blue="<span weight='bold' color='#395573'>"
    count=0
    for item in $main_menu; do
        count=$((count+1))
        echo "$(printf %X $count):$blue⟬</span>$item$blue⟭</span>"
    done
}

title_copy(){
    mpc current | wl-copy
}

album_copy(){
    mpc current -f "[%album%]" | wl-copy
}

artist_copy(){
    mpc current -f "[%artist%]" | wl-copy
}

path_copy(){
    mpd_music_dir="$XDG_MUSIC_DIR"
    echo "$mpd_music_dir/$(mpc -f '%file%' current)" | wl-copy
}

pipewire_output(){
    mpc pause
    mpc enable PipeWire
    mpc disable "$dac_name" && mpc play
}

alsa_output(){
    timeout="5s"
    mpc pause
    mpc enable "$dac_name"
    mpc disable PipeWire
    mpc play
    sleep "$timeout";
    mpc play
}

game_start(){
    systemctl --user stop picom
}

game_end(){
    systemctl --user start picom
}

bt_headphones(){
    data="$APP_DATA/menu/data.json"
    mac=$(jq -r ".[] | select(.name==\"Galaxy Buds+\") .mac" "$data")
    state=$(bluetoothctl info "$mac" | awk '/Connected:/{print $2}')
    if [ "$state" = "no" ]; then
        bluetoothctl connect "$mac"
        notify-send --hint=string:x-dunst-stack-tag:headphones "Galaxy Buds+ connected"
    else
        bluetoothctl disconnect "$mac"
        notify-send --hint=string:x-dunst-stack-tag:headphones "Galaxy Buds+ disconnected"
    fi
}

translate(){
    text="$(wl-paste)"
    translate="$(trans -brief :ru "$text")"
    notify-send -t $((${#text} * 150)) "$translate"
    play-sound "cyclist.ogg"
}

termbin(){
    url=$(wl-paste | nc termbin.com 9999)
    echo "$url" | wl-copy
    notify-send "$url copied to clipboard"
    play-sound "direct.ogg"
}

minevpn(){
    if pgrep -f 'sudo openconnect --user' > /dev/null; then
        pkill -f 'sudo openconnect --user'
    else
        ~/bin/vpn_up
    fi
}

handler() {
    while IFS= read -r arg; do
        for t in $main_menu; do
            if echo "$arg" | rg "$t" > /dev/null; then
                eval "$t"
            fi
        done
    done
}

dac_name='RME ADI-2/4 PRO SE'
rofi_options="-auto-select -markup-rows -b -lines 1 -theme neg -dmenu -p '❯>'"
generate_menu | eval "rofi $rofi_options" | handler
