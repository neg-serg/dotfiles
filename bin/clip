#!/usr/bin/env sh
set -eu
if (set -o pipefail) 2>/dev/null; then
  set -o pipefail
fi
# clip: clipboard helper (greenclip/gpaste/clipcat + extras)
# Usage:
#   clip                       # open clipboard menu (greenclip/gpaste/clipcat)
#   clip pipe [-p|--paste] [-c|--command CMD] [--]
#   clip youtube-dw-list       # pick video URL from history and download
#   clip youtube-dw            # download URL currently in clipboard
#   clip youtube-view          # open yt scratchpad and paste selection
#   clip -h|--help|help        # this help
# Env:
#   USE_GPASTE=true            # use gpaste instead of greenclip
#   USE_CLIPCAT=true           # use clipcat instead of greenclip
[ -z "${USE_GPASTE-}" ] && USE_GPASTE=false
[ -z "${USE_CLIPCAT-}" ] && USE_CLIPCAT=false
alias yt='yt-dlp --downloader aria2c -f "(bestvideo+bestaudio/best)"'

read_command() {
    rofi_cmd="rofi -dmenu -matching glob -dmenu -p ❯>"
    cmd_=$(command echo -n "sort tac"| tr -s ' ' '\n' | eval "$rofi_cmd")
    echo "$cmd_"
}

send_key() {
    key="$1"
    xdotool key --window "$window" "$key"
}

clipboard_pipe() {
    cmd=""
    selection=""
    out=""
    paste=false
    window=$(xdotool getwindowfocus|tr -d '\n')
    while true; do
        case "$1" in
            --) shift; break ;;
            -p | --paste) paste=true; shift ;;
            -c | -e | --command)
                if [ "$2" != "" ]; then
                    cmd="$2"
                else
                    cmd="$(read_command)"
                fi
                shift
            ;;
            *) cmd="$(read_command)" ;;
        esac
        if [ "$paste" = true ]; then
            command echo -n | xclip -i # clear clipboard first
            send_key 'Control_L+c'; send_key 'Control_L+v'
        fi
        if [ "$cmd" != "" ]; then
            # read the selection
            selection=$(xclip -o)
            if [ "$selection" = "" ] && [ "$paste" ]; then
                echo "no input, aborting..."
                exit 1
            fi
            # put it into the clipboard (and clear it first so Klipper doesn't interfere)
            command echo -n | xclip -i -sel clipboard
            clipboard=$(xclip -o)
            out=$($clipboard | $cmd )
            $out | xclip -i -sel clipboard
            exit 0
        else
            dunstify "you need to specify a command"
            exit 1
        fi
    done
}

clip_main() {
    if [ "$USE_GPASTE" = true ]; then
        if command -v gpaste-client >/dev/null 2>&1; then
            rofi_cmd="rofi -dmenu -lines 10 -no-plugins -sort -i -matching glob -dmenu -p '⟬clip⟭ ❯>' -theme clip.rasi"
            selection="$(gpaste-client --oneline --raw | head -50 | nl -s ': ' -n rz -w 2 | eval "$rofi_cmd")"
            num="$(echo "$selection" | awk -F ': ' '{print $1}')"
            uuid="$(gpaste-client --oneline | awk -F ':' '{print $1}' | sed -n "$num""p")"
            gpaste-client select "$uuid"
        fi
    elif [ "$USE_CLIPCAT" = true ]; then
        clipcat-menu -c ~/.config/clipcat/clipcat-menu.toml
    else
        rofi -modi "clipboard:greenclip print" -show clipboard -theme clip
    fi
}

yr() {
    negwm send 'scratchpad toggle youtube'
    sleep 1s
    echo "$@" | xsel -i
    xdotool key shift+Insert
}

youtube_url() {
    if [ "$USE_GPASTE" = true ]; then
        gpaste-client \
            | rg -E 'https.*(youtube|vimeo).com' \
            | cut -f2- -d ' ' \
            | rofi -lines 7 -dmenu -p '⟬youtube⟭ ❯>'
    else
        CM_OUTPUT_CLIP=1 clipmenu \
            | rg -E 'https.*(youtube|vimeo).com' \
            | cut -f2- -d ' ' \
            | rofi -lines 7 -dmenu -p '⟬youtube⟭ ❯>'
    fi
}

case "$1" in
    -h|--help|help)
        sed -n '2,20p' "$0" | sed 's/^# \{0,1\}//'; exit 0 ;;
    pipe) shift; clipboard_pipe "$@" ;;
    youtube-dw-list) shift; cd "${XDG_VIDEOS_DIR:-$HOME/vid}/new" && yt "$(youtube_url)" ;;
    youtube-dw) shift; cd "${XDG_VIDEOS_DIR:-$HOME/vid}/new" && yt "$(xclip -o)" ;;
    youtube-view) shift; ~/bin/yr clip ;;
    *) clip_main ;;
esac
